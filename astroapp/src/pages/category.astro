---
import { getCollection } from "astro:content";
import Layout from "../layout/Layout.astro";

const posts = await getCollection("posts");

// 收集所有标签（作为分类）并统计文章数量
const categories = posts.reduce(
  (acc, post) => {
    if (post.data.tags) {
      post.data.tags.forEach((tag) => {
        if (!acc[tag]) {
          acc[tag] = {
            name: tag,
            count: 0,
            posts: [],
          };
        }
        acc[tag].count++;
        acc[tag].posts.push(post);
      });
    }
    return acc;
  },
  {} as Record<string, { name: string; count: number; posts: any[] }>
);

// 按文章数量排序
const sortedCategories = Object.values(categories).sort(
  (a, b) => b.count - a.count
);

const page = {
  title: "分类 - 光合",
  description: "文章分类",
  lang: "zh-CN" as const,
};
---

<Layout {...page}>
  <div>
    <h1 class="text-xl font-bold mb-6">分类</h1>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      {
        sortedCategories.map((category) => (
          <a
            href={`/tags/${category.name}`}
            class="p-6 border border-gray-200 rounded-lg hover:border-gray-400 transition-colors"
          >
            <div class="flex justify-between items-baseline mb-3">
              <h2 class="text-xl font-bold">#{category.name}</h2>
              <span class="text-sm text-gray-500 font-en-italic">
                {category.count} {category.count === 1 ? "post" : "posts"}
              </span>
            </div>

            <div class="space-y-1">
              {category.posts.slice(0, 3).map((post) => (
                <p class="text-sm text-gray-600 truncate">{post.data.title}</p>
              ))}
              {category.count > 3 && (
                <p class="text-sm text-gray-400 font-en-italic">
                  and {category.count - 3} more...
                </p>
              )}
            </div>
          </a>
        ))
      }
    </div>

    {sortedCategories.length === 0 && <p class="text-gray-500">暂无分类</p>}
  </div>
</Layout>
